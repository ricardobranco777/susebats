#!/usr/bin/env python3
"""
List skipped BATS tests on all schedules
"""

import argparse
import sys
from concurrent.futures import ThreadPoolExecutor

from bats.repos import REPOS, Product, find_products, grep_tarball


def get_products(repos: list[str]) -> list[Product]:
    """
    Get products from YAML schedules
    """

    def process_repo(repo: str) -> list[Product]:
        return [
            product
            for file in grep_tarball(repo, "*.yaml")
            for product in find_products(file)
        ]

    products = []
    with ThreadPoolExecutor(max_workers=min(10, len(repos))) as executor:
        for result in executor.map(process_repo, repos):
            products.extend(result)
    return products


def main() -> None:
    """
    Main function
    """
    parser = argparse.ArgumentParser(
        prog="bats_list",
        description="list skipped BATS tests per product",
        epilog="set GITLAB_TOKEN environment variable for gitlab",
    )
    parser.add_argument(
        "repositories",
        nargs="*",
        default=REPOS,
        metavar="repository",
        help="directory or URL",
    )
    args = parser.parse_args()

    for product in get_products(args.repositories):
        print(f"{product.name}\t{product.url}")
        for setting, value in product.settings.items():
            print(f"\t{setting}='{value}'")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        sys.exit(1)
