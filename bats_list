#!/usr/bin/env python3
"""
List skipped BATS tests on all schedules
"""

import argparse
import sys
from concurrent.futures import ThreadPoolExecutor

from bats.repos import REPOS, Product, find_products, grep_tarball


def get_products(repo: str) -> list[Product]:
    """
    Get products from YAML schedules in repo
    """
    return [
        product
        for file in grep_tarball(repo, "*.yaml")
        for product in find_products(file)
    ]


def main() -> None:
    """
    Main function
    """
    parser = argparse.ArgumentParser(
        prog="bats_list",
        description="list skipped BATS tests per product",
        epilog="set GITLAB_TOKEN environment variable for gitlab",
    )
    parser.parse_args()

    with ThreadPoolExecutor(max_workers=min(10, len(REPOS))) as executor:
        for products in executor.map(get_products, REPOS):
            for product in products:
                print(f"{product.name}\t{product.url}")
                for setting, value in product.settings.items():
                    print(f"\t{setting}='{value}'")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        sys.exit(1)
